type Query {
    messages: [Message]
    user(id: String): User
}

type Mutation {
    addMessage(input: MessageInput!): Message,
    addUserContact(username: String, email: String): User,
}


type Message {
    id: ID!
    userFrom: String
    text: String
    time: Date
    minHours: String
}

type User {
    _id: ID!
    username: String
    email: String
    password: String
}

input MessageInput {
    text: String
}


type Subscription {
  messageAdded: Message
}

input UserInput {
    username: String
    email: String
    password: String
}

scalar Date